# bot.py

import logging
import json  # <-- –î–û–ë–ê–í–õ–Ø–ï–ú –∏–º–ø–æ—Ä—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JSON
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler

from config import TOKEN

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logging.getLogger("httpx").setLevel(logging.WARNING)
logger = logging.getLogger(__name__)

# --- –ù–û–í–´–ô –ë–õ–û–ö: –ö–û–ù–°–¢–ê–ù–¢–´ –ò URL ---
WEB_APP_URL = "https://29140c3bea187191179ca6954aabcfd6.serveo.net"  # <-- –í–ê–ñ–ù–û: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–¥–µ—Å—å –í–ê–®–ê —Å—Å—ã–ª–∫–∞

CALLBACK_BUTTON_HELP = "callback_button_help"
CALLBACK_BUTTON_BACK_TO_START = "callback_button_back_to_start"


# --- –ò–ó–ú–ï–ù–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –ö–õ–ê–í–ò–ê–¢–£–†–´ ---
def get_start_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π Web App."""
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞—à–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    button_order = InlineKeyboardButton(
        text="üöñ –ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏ (Web App)",
        web_app=WebAppInfo(url=WEB_APP_URL)  # <-- –ì–ª–∞–≤–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–¥–µ—Å—å!
    )
    
    # –û—Å—Ç–∞–≤–∏–º –∫–Ω–æ–ø–∫—É "–°–ø—Ä–∞–≤–∫–∞" –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã CallbackQueryHandler
    button_help = InlineKeyboardButton(
        text="‚ùì –°–ø—Ä–∞–≤–∫–∞",
        callback_data=CALLBACK_BUTTON_HELP
    )

    # –°–æ–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –¥–≤–∞ —Ä—è–¥–∞
    keyboard = [
        [button_order],
        [button_help]
    ]
    
    return InlineKeyboardMarkup(keyboard)


# --- –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –ò –°–¢–ê–†–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ---

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start, –æ—Ç–ø—Ä–∞–≤–ª—è—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π."""
    user = update.effective_user
    await update.message.reply_html(
        text=f"–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}! üëã\n\n"
             "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ —Ç–∞–∫—Å–∏.",
        reply_markup=get_start_keyboard()  # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )

# ... (—Ñ—É–Ω–∫—Ü–∏–∏ help_command –∏ button_callback_handler –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –æ–Ω–∏ –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞—é—Ç)
# –ï—Å–ª–∏ –æ–Ω–∏ –≤–∞–º –Ω–µ –Ω—É–∂–Ω—ã, –∏—Ö –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å, –Ω–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ –ª—É—á—à–µ –æ—Å—Ç–∞–≤–∏—Ç—å.

# --- –ù–û–í–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –î–ê–ù–ù–´–• –ò–ó WEB APP ---
async def web_app_data_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ç Web App."""
    # –î–∞–Ω–Ω—ã–µ –æ—Ç Web App –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –≤–∏–¥–µ JSON-—Å—Ç—Ä–æ–∫–∏
    data_str = update.message.web_app_data.data
    logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ Web App: {data_str}")
    
    try:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º JSON-—Å—Ç—Ä–æ–∫—É –≤ Python-—Å–ª–æ–≤–∞—Ä—å
        data = json.loads(data_str)
        action = data.get('action')

        if action == 'new_order_test':
            from_addr = data.get('from')
            to_addr = data.get('to')
            
            # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—è –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
            await update.message.reply_text(
                text=(
                    f"‚úÖ –ü—Ä–∏–Ω—è—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\n"
                    f"<b>–û—Ç–∫—É–¥–∞:</b> {from_addr}\n"
                    f"<b>–ö—É–¥–∞:</b> {to_addr}\n\n"
                    "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º!"
                ),
                parse_mode='HTML'
            )
        else:
            await update.message.reply_text("–ü–æ–ª—É—á–µ–Ω—ã –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç Web App.")

    except json.JSONDecodeError:
        logger.error(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON –æ—Ç Web App: {data_str}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Web App.")


# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö –≠–•–û-–°–û–û–ë–©–ï–ù–ò–ô (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
async def echo_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # ...


# --- –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–£–°–ö–ê ---
def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    print("–ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...")
    application = Application.builder().token(TOKEN).build()

    # --- –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í ---
    
    # 1. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App.
    # –û–Ω –¥–æ–ª–∂–µ–Ω —Å—Ç–æ—è—Ç—å –í–´–®–ï, —á–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π,
    # —Ç–∞–∫ –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Web App –∏–º–µ–µ—Ç –∏ —Ç–µ–∫—Å—Ç–æ–≤—É—é —á–∞—Å—Ç—å.
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, web_app_data_handler))

    # 2. –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start_command))
    # ... (–µ—Å–ª–∏ –≤—ã –æ—Å—Ç–∞–≤–∏–ª–∏ help_command –∏ button_callback_handler, –æ–Ω–∏ —Ç–æ–∂–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–¥–µ—Å—å)
    # application.add_handler(CallbackQueryHandler(button_callback_handler))

    # 3. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—ç—Ö–æ)
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo_message))

    # ... (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥)
    
    application.run_polling()
    print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")


if __name__ == "__main__":
    main()
