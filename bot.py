import logging
import json # <-- –ù–µ –∑–∞–±—ã–≤–∞–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å json
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
from config import TOKEN

logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)

# –í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ GitHub Pages
WEB_APP_URL = "https://mrzelus.github.io/Marfino/"

# --- –§–£–ù–ö–¶–ò–ò-–û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ Web App."""
    keyboard = [
        [InlineKeyboardButton("üöñ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Marfino Taxi", web_app=WebAppInfo(url=WEB_APP_URL))]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.",
        reply_markup=reply_markup
    )

async def web_app_data_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ç Web App."""
    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤–æ–æ–±—â–µ –µ—Å—Ç—å
    if not update.message or not update.message.web_app_data:
        return

    data_str = update.message.web_app_data.data
    logging.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç Web App: {data_str}")

    try:
        data = json.loads(data_str)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏—à–ª–æ
        if data.get('action') == 'show_profile':
            user = update.effective_user
            await update.message.reply_text(
                f"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ Marfino Taxi:\n\n"
                f"üë§ –ò–º—è: {user.first_name}\n"
                f"üÜî ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.id}\n"
                f"üîë –Æ–∑–µ—Ä–Ω–µ–π–º: @{user.username if user.username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}"
            )
        else:
            # –ï—Å–ª–∏ –ø—Ä–∏—à–ª–æ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ, –Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
            await update.message.reply_text(f"–ü–æ–ª—É—á–µ–Ω—ã —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ, –Ω–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {data}")
            
    except (json.JSONDecodeError, AttributeError):
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—à–ª–∏ –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö –∫–∞–∫ –µ—Å—Ç—å
        await update.message.reply_text(f"–ü–æ–ª—É—á–µ–Ω—ã —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç Web App: {data_str}")

# --- –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø ---
def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Web App."""
    application = Application.builder().token(TOKEN).build()

    # --- –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í ---

    # 1. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
    application.add_handler(CommandHandler("start", start))
    
    # 2. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç Web App.
    # –≠—Ç–æ –∫–ª—é—á–µ–≤–æ–π —à–∞–≥!
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, web_app_data_handler))

    print("–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == "__main__":
    main()
